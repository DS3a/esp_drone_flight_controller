#include "accel_lowpassFilter.h"

static double filter_taps[ACCEL_LOWPASSFILTER_TAP_NUM] = {
  -0.0055978304623204075,
  0.0001473070625159172,
  0.005389230675738578,
  0.0024136605433333807,
  -0.006507812392663708,
  -0.0054295363761388705,
  0.0075947556680061295,
  0.010702454701272665,
  -0.006248990367678578,
  -0.016581742795489463,
  0.00292921384096778,
  0.024116018078601364,
  0.005052328844285514,
  -0.03129624203727663,
  -0.018310494321135653,
  0.03867207450017509,
  0.04255554685230282,
  -0.04414005443662365,
  -0.09232944519341878,
  0.048247013771185496,
  0.3137759400450528,
  0.4507404291320475,
  0.3137759400450528,
  0.048247013771185496,
  -0.09232944519341878,
  -0.04414005443662365,
  0.04255554685230282,
  0.03867207450017509,
  -0.018310494321135653,
  -0.03129624203727663,
  0.005052328844285514,
  0.024116018078601364,
  0.00292921384096778,
  -0.016581742795489463,
  -0.006248990367678578,
  0.010702454701272665,
  0.0075947556680061295,
  -0.0054295363761388705,
  -0.006507812392663708,
  0.0024136605433333807,
  0.005389230675738578,
  0.0001473070625159172,
  -0.0055978304623204075
};

void accel_lowpassFilter_init(accel_lowpassFilter* f) {
  int i;
  for(i = 0; i < ACCEL_LOWPASSFILTER_TAP_NUM; ++i)
    f->history[i] = 0;
  f->last_index = 0;
}

void accel_lowpassFilter_put(accel_lowpassFilter* f, double input) {
  f->history[f->last_index++] = input;
  if(f->last_index == ACCEL_LOWPASSFILTER_TAP_NUM)
    f->last_index = 0;
}

double accel_lowpassFilter_get(accel_lowpassFilter* f) {
  double acc = 0;
  int index = f->last_index, i;
  for(i = 0; i < ACCEL_LOWPASSFILTER_TAP_NUM; ++i) {
    index = index != 0 ? index-1 : ACCEL_LOWPASSFILTER_TAP_NUM-1;
    acc += f->history[index] * filter_taps[i];
  };
  return acc;
}
